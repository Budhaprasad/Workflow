name: Clean Closed Issue References

on:
  workflow_dispatch:

permissions:
  issues: write  # Needed to edit comments

jobs:
  clean-comments:
    runs-on: ubuntu-latest

    steps:
      - name: Remove closed issue references in comments
        uses: actions/github-script@v7
        with:
          script: |
            const issueRefRegex = /(\S+\/\S+#\d+|#\d+)/g;

            const owner = context.repo.owner;
            const repo = context.repo.repo;

            const issues = await github.rest.issues.listForRepo({
              owner,
              repo,
              state: 'open'
            });

            for (const issue of issues.data) {
              if (issue.comments === 0) continue;

              const comments = await github.rest.issues.listComments({
                owner,
                repo,
                issue_number: issue.number
              });

              for (const comment of comments.data) {
                let originalBody = comment.body;
                let modifiedBody = originalBody;

                const matches = [...originalBody.matchAll(issueRefRegex)];
                if (matches.length === 0) continue;

                for (const match of matches) {
                  const ref = match[0];
                  let refOwner = owner;
                  let refRepo = repo;
                  let refNum;

                  if (ref.includes('/')) {
                    const [fullRepo, num] = ref.split('#');
                    [refOwner, refRepo] = fullRepo.split('/');
                    refNum = parseInt(num);
                  } else {
                    refNum = parseInt(ref.replace('#', ''));
                  }

                  try {
                    const refIssue = await github.rest.issues.get({
                      owner: refOwner,
                      repo: refRepo,
                      issue_number: refNum
                    });

                    if (refIssue.data.state === 'closed') {
                      console.log(`üîé Found closed issue reference ${ref} in comment ${comment.id}. Removing.`);
                      modifiedBody = modifiedBody.replace(ref, '').trim();
                    }
                  } catch (err) {
                    console.warn(`‚ö†Ô∏è Could not fetch issue ${ref}: ${err.message}`);
                  }
                }

                if (modifiedBody !== originalBody) {
                  await github.rest.issues.updateComment({
                    owner,
                    repo,
                    comment_id: comment.id,
                    body: modifiedBody
                  });
                  console.log(`‚úèÔ∏è Updated comment ${comment.id} on issue #${issue.number}`);
                }
              }
            }
