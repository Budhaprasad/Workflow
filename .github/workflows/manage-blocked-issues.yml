name: Check Blocked Issues

on:
  workflow_dispatch:

jobs:
  check-blocked-issues:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Run Block Check Script
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issues = await github.paginate(github.rest.issues.listForRepo, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });

            for (const issue of issues) {
              const comments = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number
              });

              for (const comment of comments.data) {
                const match = comment.body.match(/Blocked by Issue(.*)/i);
                if (!match) continue;

                const referenced = match[1]
                  .split(/[#\s]+/)
                  .filter(n => n)
                  .map(n => parseInt(n, 10))
                  .filter(n => !isNaN(n));

                const statusChecks = await Promise.all(referenced.map(async (refId) => {
                  try {
                    const refIssue = await github.rest.issues.get({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      issue_number: refId
                    });
                    return refIssue.data.state === 'closed';
                  } catch (e) {
                    return false;
                  }
                }));

                const allClosed = statusChecks.every(v => v === true);

                if (allClosed) {
                  await github.rest.issues.deleteComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    comment_id: comment.id
                  });
                  console.log(`Deleted comment on Issue #${issue.number}: ${comment.id}`);
                }
              }
            }
