name: Remove Comments with Closed Issue References

on:
  workflow_dispatch:

permissions:
  issues: write  # Needed to delete comments

jobs:
  cleanup-comments:
    runs-on: ubuntu-latest

    steps:
      - name: Delete comments that reference only closed issues
        uses: actions/github-script@v7
        with:
          script: |
            const issueRefRegex = /(?:^|\s)(?:(\S+\/\S+)#(\d+)|#(\d+))/g;

            const owner = context.repo.owner;
            const repo = context.repo.repo;

            const issues = await github.rest.issues.listForRepo({
              owner,
              repo,
              state: 'open'
            });

            for (const issue of issues.data) {
              if (issue.comments === 0) continue;

              const comments = await github.rest.issues.listComments({
                owner,
                repo,
                issue_number: issue.number
              });

              for (const comment of comments.data) {
                const refs = [...comment.body.matchAll(issueRefRegex)];

                if (refs.length === 0) continue;

                let allClosed = true;

                for (const match of refs) {
                  const [ , crossRepo, crossNum, sameRepoNum ] = match;

                  try {
                    let refIssue;

                    if (sameRepoNum) {
                      refIssue = await github.rest.issues.get({
                        owner,
                        repo,
                        issue_number: Number(sameRepoNum)
                      });
                    } else if (crossRepo && crossNum) {
                      const [crossOwner, crossRepoName] = crossRepo.split('/');
                      refIssue = await github.rest.issues.get({
                        owner: crossOwner,
                        repo: crossRepoName,
                        issue_number: Number(crossNum)
                      });
                    }

                    if (refIssue && refIssue.data.state === 'open') {
                      allClosed = false;
                      break;
                    }
                  } catch (error) {
                    console.warn(`‚ö†Ô∏è Could not fetch referenced issue: ${error.message}`);
                    allClosed = false;
                    break;
                  }
                }

                if (allClosed) {
                  // Only delete if the comment was authored by this GitHub token's user
                  if (comment.user.type === 'Bot' || comment.user.login === context.actor) {
                    await github.rest.issues.deleteComment({
                      owner,
                      repo,
                      comment_id: comment.id
                    });
                    console.log(`üóëÔ∏è Deleted comment ${comment.id} from issue #${issue.number} ‚Äî all referenced issues were closed.`);
                  } else {
                    console.log(`‚õî Skipping comment ${comment.id} by ${comment.user.login} ‚Äî cannot delete.`);
                  }
                }
              }
            }
