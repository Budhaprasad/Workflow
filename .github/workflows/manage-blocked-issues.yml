name: Clean Closed 'Blocked by' Comments

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'  # Runs hourly – adjust as needed

jobs:
  clean-blocked-comments:
    runs-on: ubuntu-latest
    permissions:
      issues: write  # Required to edit comments
    steps:
      - name: Clean 'Blocked by' References
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const regex = /#(\d+)/g;

            console.log(`🔍 Scanning open issues in ${owner}/${repo}`);
            const issues = await github.paginate(github.rest.issues.listForRepo, {
              owner,
              repo,
              state: 'open'
            });

            for (const issue of issues) {
              console.log(`\n📌 Issue #${issue.number}: ${issue.title}`);
              if (issue.comments === 0) {
                console.log("   🚫 No comments.");
                continue;
              }

              const comments = await github.paginate(github.rest.issues.listComments, {
                owner,
                repo,
                issue_number: issue.number
              });

              for (const comment of comments) {
                const matches = [...comment.body.matchAll(regex)];
                if (matches.length === 0) {
                  console.log(`   💬 Comment ID: ${comment.id}`);
                  console.log("     🚫 No 'Blocked by' reference found.");
                  continue;
                }

                console.log(`   💬 Comment ID: ${comment.id}`);
                console.log(`     📄 Raw: "${comment.body}"`);

                const stillBlocked = [];

                for (const match of matches) {
                  const blockedIssueNumber = parseInt(match[1]);
                  console.log(`     🔗 Found reference to issue #${blockedIssueNumber}`);

                  try {
                    const blockedIssue = await github.rest.issues.get({
                      owner,
                      repo,
                      issue_number: blockedIssueNumber
                    });

                    if (blockedIssue.data.state === 'closed') {
                      console.log(`     ✅ Issue #${blockedIssueNumber} is closed.`);
                    } else {
                      console.log(`     ⏳ Issue #${blockedIssueNumber} is still open.`);
                      stillBlocked.push(`#${blockedIssueNumber}`);
                    }
                  } catch (err) {
                    console.warn(`     ⚠️ Could not fetch issue #${blockedIssueNumber}: ${err.message}`);
                  }
                }

                if (stillBlocked.length === 0) {
                  console.log("     🧹 All references are closed. Clearing comment.");
                  await github.rest.issues.updateComment({
                    owner,
                    repo,
                    comment_id: comment.id,
                    body: '[Auto-cleaned: all blocking issues are closed]'
                  });
                } else {
                  const updatedBody = `Blocked by ${stillBlocked.join(' ')}`;
                  console.log(`     ✏️ Updating comment to: "${updatedBody}"`);
                  await github.rest.issues.updateComment({
                    owner,
                    repo,
                    comment_id: comment.id,
                    body: updatedBody
                  });
                }
              }
            }
